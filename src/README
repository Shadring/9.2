Условия домашки
Чтобы справиться с заданиями, проверьте, что вы изучили весь материал урока:

Посмотрели видео и прочитали конспект.
Проанализировали эталонный код в разделе «Задачи».
Разобрали решения задач по скринкастам в разделе «Подготовка к практике».
Как сдавать домашку
Домашнее задание состоит из двух частей: основного задания и дополнительного.

Основное задание сдайте на проверку наставнику ссылкой на пул-реквест.
Дополнительные задания выполняйте в отдельном проекте и отправьте на проверку ссылкой на пул-реквест в проекте дополнительных заданий.
Посмотрите инструкцию, как сдавать домашку с помощью пул-реквест.


Инструкция
Задание
Продолжаем работу над виджетом банковских операций клиента. Выкладываем свой проект на GitHub. Учитываем рекомендации PEP 8, продолжаем использовать линтеры и делаем атомарные коммиты.

Критерии выполнения задания
Проект выложили на GitHub.
Домашку сдали с помощью пул-реквеста.
Функции соответствуют PEP 8, имеют аннотации типов, корректный docstring.
Линтер
flake8
 не выдает ошибок.
mypy
 не выдает ошибок.
Создали README-файл для проекта и наполнили его полезной информацией о проекте.
Задачи
Создайте GitHub-репозиторий.
Залейте текущий проект в GitHub-репозиторий.
Создайте модуль
processing
 для новых функций.
Напишите функцию, которая принимает на вход список словарей и значение для ключа
state
 (опциональный параметр со значением по умолчанию
EXECUTED
) и возвращает новый список, содержащий только те словари, у которых ключ
state
 содержит переданное в функцию значение.
# Вход функции
[{'id': 41428829, 'state': 'EXECUTED', 'date': '2019-07-03T18:35:29.512364'}, {'id': 939719570, 'state': 'EXECUTED', 'date': '2018-06-30T02:08:58.425572'}, {'id': 594226727, 'state': 'CANCELED', 'date': '2018-09-12T21:27:25.241689'}, {'id': 615064591, 'state': 'CANCELED', 'date': '2018-10-14T08:21:33.419441'}]

# Выход функции со статусом по умолчанию EXECUTED
[{'id': 41428829, 'state': 'EXECUTED', 'date': '2019-07-03T18:35:29.512364'}, {'id': 939719570, 'state': 'EXECUTED', 'date': '2018-06-30T02:08:58.425572'}]

# Выход функции, если вторым аргументов передано 'CANCELED'
[{'id': 594226727, 'state': 'CANCELED', 'date': '2018-09-12T21:27:25.241689'}, {'id': 615064591, 'state': 'CANCELED', 'date': '2018-10-14T08:21:33.419441'}]
Напишите функцию, которая принимает на вход список словарей и возвращает новый список, в котором исходные словари отсортированы по убыванию даты (ключ
date
). Функция принимает два аргумента, второй необязательный задает порядок сортировки (убывание, возрастание).
# Вход функции
[{'id': 41428829, 'state': 'EXECUTED', 'date': '2019-07-03T18:35:29.512364'}, {'id': 939719570, 'state': 'EXECUTED', 'date': '2018-06-30T02:08:58.425572'}, {'id': 594226727, 'state': 'CANCELED', 'date': '2018-09-12T21:27:25.241689'}, {'id': 615064591, 'state': 'CANCELED', 'date': '2018-10-14T08:21:33.419441'}]

# Выход функции (сортировка по убыванию, т. е. сначала самые последние операции)
[{'id': 41428829, 'state': 'EXECUTED', 'date': '2019-07-03T18:35:29.512364'}, {'id': 615064591, 'state': 'CANCELED', 'date': '2018-10-14T08:21:33.419441'}, {'id': 594226727, 'state': 'CANCELED', 'date': '2018-09-12T21:27:25.241689'}, {'id': 939719570, 'state': 'EXECUTED', 'date': '2018-06-30T02:08:58.425572'}]
Создайте README-файл для проекта.
